input[type="submit"],
input[type="reset"],
input[type="button"],
.button {
	@include vendor('appearance', 'none');
	@include vendor('transition', ('background-color #{_duration(transition)} ease-in-out', 'color #{_duration(transition)} ease-in-out'));
	background-color: _palette(accent1, bg);
	border: 0;
	border-radius: 0;
	color: _palette(accent1, fg-bold) !important;
	cursor: pointer;
	display: inline-block;
	font-weight: _font(weight-bold);
	height: 3em;
	letter-spacing: 0.05em;
	line-height: 3em;
	padding: 0 1.75em;
	text-align: center;
	text-decoration: none;
	text-indent: -0.05em;
	text-transform: uppercase;
	white-space: nowrap;

	&:hover {
		background-color: lighten(_palette(accent1, bg), 5);
		color: _palette(accent1, fg-bold) !important;
	}

	&:active {
		background-color: darken(_palette(accent1, bg), 5);
	}

	&.icon {
		padding-left: 1.35em;

		&:before {
			margin-right: 0.5em;
		}
	}

	&.fit {
		display: block;
		margin: 0 0 (_size(element-margin) * 0.5) 0;
		width: 100%;
	}

	&.small {
		font-size: 0.8em;
		height: (_size(element-height) * 0.9);
		line-height: (_size(element-height) * 0.9);
	}

	&.big {
		font-size: 1.25em;
		height: (_size(element-height) * 0.9);
		line-height: (_size(element-height) * 0.9);
	}

	&.alt {
		background-color: transparent;
		box-shadow: inset 0 0 0 2px _palette(border);
		color: _palette(fg-bold) !important;

		&:hover {
			background-color: _palette(border-bg);
		}

		&:active {
			background-color: _palette(border2-bg);
		}

		&.icon {
			&:before {
				color: _palette(fg-light);
			}
		}
	}

	&.special {
		background-color: _palette(accent1, bg);
		color: _palette(accent1, fg-bold) !important;

		&:hover {
			background-color: lighten(_palette(accent1, bg), 5);
		}

		&:active {
			background-color: darken(_palette(accent1, bg), 5);
		}
	}

	&.disabled,
	&:disabled {
		background-color: _palette(fg) !important;
		box-shadow: none !important;
		color: _palette(bg) !important;
		cursor: default;
		opacity: 0.25;
	}
}
